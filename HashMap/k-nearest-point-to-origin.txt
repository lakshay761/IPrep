import java.util.*;
 class Main {
    
     // -----------------------------------------------------
 	 // This is a functional problem. Do not change main
 	 // This function takes as input a 2d array and k value
 	 // It should return required output as 2d array
     public static int[][] kClosest(int[][] points, int k) {
        //Write your code here
        PriorityQueue<point> pq = new PriorityQueue<>();
        for(int i = 0; i<k ; i++){
            int x = points[i][0];
            int y = points[i][1];
            point a = new point(x,y);
            pq.add(a);
        }
        
        for(int i = k; i<points.length ; i++){
            int x = points[i][0];
            int y = points[i][1];
            point a = new point(x,y);
            if(a.dist < pq.peek().dist){
                pq.remove();
                pq.add(a);
            }
        }
        // int n = points.length;
        int[][] arr = new int[k][2]; 
        int i = 0;
        while(pq.size()>0){
            point rem = pq.remove();
            arr[i][0] = rem.x;
            arr[i][1] = rem.y;
            i++;
        }
        return arr;
     }
     
     public static class point implements Comparable<point>{
         int x;
         int y;
         int dist;
         point(int x,int y){
             this.x =x;
             this.y = y;
             this.dist = x*x + y*y;
         }
         public int compareTo(point other){
             int s1 = this.x*this.x + this.y*this.y;
             int s2 = other.x*other.x + other.y*other.y;
             return s2-s1;
         }
     }
     public static void main(String[] args){
         Scanner scn= new Scanner(System.in);
         int row=scn.nextInt();
         int[][] points= new int[row][2];
         for(int i=0;i<row;i++){
             for(int j=0;j<2;j++){
                 points[i][j]=scn.nextInt();
             }
         }
         int k= scn.nextInt();
         int[][] res=kClosest(points,k);
         for(int i=0;i<res.length;i++){
             for(int j=0;j<2;j++)
                 System.out.print(res[i][j]+" ");
 	 	 	 System.out.println();
         }
     }
 }